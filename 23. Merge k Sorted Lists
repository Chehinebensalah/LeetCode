/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& l) {
        
        vector<int> res; 
        int n = l.size();
        for(int i=0;i<n;i++){
            ListNode* node = l[i]; 
            while (node!= nullptr) {
                res.push_back(node->val);
                node = node->next;
            }
        }
        if(res.size()==0) return nullptr;
        sort(res.begin(),res.end());
        ListNode * fakeans = new ListNode(res[0]);
        ListNode * ans = fakeans;
        int i=1;
        n=res.size();
        while(i<n){
            fakeans->next = new ListNode(res[i]);
            fakeans= fakeans->next;
            i++;
        }
        return ans;
    }
};
